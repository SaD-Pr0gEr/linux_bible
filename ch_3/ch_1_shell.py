"""
До того как значки и окна заполонили экраны, для взаимодействия с большинством
компьютеров использовались команды. В системах UNIX, на основе которых создана
операционная система Linux, программа для взаимодействия и управления
командами, называлась командной оболочкой.
Независимо от того, какой дистрибутив Linux применяется, командный интерпретатор
(оболочка) доступен всегда. Он позволяет создавать файлы скриптов,
запускать программы, работать с файловыми системами, компилировать компьютерный
код и управлять системой. Хотя командная оболочка не так интуитивно
понятна, как привычные графические интерфейсы (GUI), большинство экспертов
Linux считают ее гораздо мощнее, чем GUI. Командные интерпретаторы существуют
давно, и многие дополнительные функции, которые недоступны через графический
интерфейс, можно активизировать с помощью команды

Оболочка Linux, о которой пойдет речь в этой главе, называется оболочкой
bash, что расшифровывается как Bourne Again Shell. Такое название она получила
благодаря совместимости с одной из самых ранних оболочек UNIX оболочкой Bourne
(названа в честь ее создателя Стивена Борна и представлена командой sh)

Оболочка bash входит в большинство дистрибутивов и считается стандартной,
существуют и другие оболочки, включая C (csh), которую любят пользователи
BSD UNIX, и Korn (ksh), популярную у пользователей UNIX System V. В Ubuntu
во время загрузки по умолчанию используется оболочка dash, так как она работает
быстрее, чем bash. Существуют также оболочка tcsh (улучшенная C) и оболочка
ash (тоже похожа на Bourne shell)

Оболочка bash входит в большинство дистрибутивов и считается стандартной,
существуют и другие оболочки, включая C (csh), которую любят пользователи
BSD UNIX, и Korn (ksh), популярную у пользователей UNIX System V. В Ubuntu
во время загрузки по умолчанию используется оболочка dash, так как она работает
быстрее, чем bash. Существуют также оболочка tcsh (улучшенная C) и оболочка
ash (тоже похожа на Bourne shell)

Приведу несколько основных преимуществ, которые дает умение работать с оболочкой
  * Это позволяет научиться ориентироваться в любой Linux- или UNIX-подобной
    системе. Например, я могу войти на личный веб-сервер Red Hat Enterprise
    Linux, домашний мультимедийный сервер, домашний маршрутизатор или
    компьютер своей жены и использовать любую из этих компьютерных систем
    с помощью оболочки. Я даже могу войти в Android-систему телефона и запускать
    в ней команды. Все эти устройства работают под управлением Linux или
    аналогичных систем.

  * Специальные функции оболочки позволяют собирать входящие данные и распределять
    их между командами и файловыми системами Linux. Чтобы сэкономить время на
    вводе текста, можно находить, изменять и повторять команды из
    истории оболочки. Многие опытные пользователи практически не применяют
    графические интерфейсы, выполняя большую часть работы из оболочки.

  * Это позволяет собирать команды в файл с помощью функционального программирования,
    например условных конструкций, циклов и других операторов, чтобы
    быстро выполнять сложные операции и не набирать команды снова и снова.
    Программы, состоящие из команд, которые хранятся в файле и запускаются
    из него, называются скриптами оболочки. Многие системные администраторы
    Linux используют скрипты оболочки для автоматизации таких задач, как резервное
    копирование данных, мониторинг файлов логов или проверка работоспособности системы.

Оболочка — это интерпретатор командного языка. Поработав в операционных
системах Microsoft, можно заметить, что в Linux оболочки действуют аналогично,
но в целом намного мощнее, чем интерпретатор PowerShell. Можно с удовольствием
использовать графический интерфейс Linux, однако по мере того, как ваши
знания о Linux будут расширяться, вам наверняка в какой-то момент придется
применить оболочку, чтобы отследить проблему или администрировать некоторые функции.

По умолчанию для обычного пользователя приглашение — это знак доллара: $
Приглашение для суперпользователя — знак фунта/решётки: #
Хотя символ # указывает, что команда должна выполняться от имени суперпользователя,
не нужно входить в систему, чтобы запустить такую команду. Наиболее распространенный способ
запуска команды от имени суперпользователя — добавление ключевого слова sudo.

Большинство систем Linux с интерфейсом рабочего стола задействуют несколько
виртуальных консолей, работающих на компьютере. Виртуальные консоли позволяют
одновременно открывать несколько сеансов интерпретатора вместе с одновременным
задействованием графического интерфейса

Между виртуальными консолями можно переключаться, удерживая клавиши
Ctrl и Alt и нажимая одну из функциональных клавиш F1–F6. Например, в дистрибутиве
Fedora нажмите сочетание клавиш Ctrl+Alt+F1 (или F2, F3, F4, F4 и F6 в большинстве
систем Linux), чтобы отобразить одну из семи виртуальных консолей.
Графический интерфейс обычно имеется в одной из первых двух виртуальных
консолей, а остальные шесть — текстовые.

Команда whoami отображает имя пользователя, а команда grep (замените chris
своим именем) — определение учетной записи в файле /etc/passwd. Последняя
часть в этой записи показывает, что оболочка bash (/bin/bash) является оболочкой
по умолчанию (той, которая запускается при входе в систему или при открытии
окна терминала).

Для чего использовать различные командные интерпретаторы?
* Вы уже привыкли применять системы UNIX System V (часто с ksh по умолчанию)
    или Sun Microsystems и другие UNIX-подобные дистрибутивы Berkeley
    (часто с csh по умолчанию), и вам удобнее работать в этих оболочках.
* Вы хотите запускать скрипты оболочки, созданные для конкретной среды
    интерпретатора, и ее нужно протестировать или использовать из текущей оболочки.
* Вы просто предпочитаете функции конкретного командного интерпретатора.
    Например, некоторые из сообществ Linux, в которые я вхожу, выбирают ksh,
    а не bash, потому что им не нравится, как в bash используются псевдонимы.
"""
