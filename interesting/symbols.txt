Символы перенаправления файлов:
        < — направляет содержимое файла в команду. В большинстве случаев по умолчанию
            команда ожидает этого действия, и здесь символ необязателен, то есть
            less bigfile — то же самое, что less < bigfile;
        > — направляет стандартный вывод команды в файл. Если файл существует, то
            его содержимое перезаписывается
            Например:
                .env
                A=b
                B=c
                cat .env > .env2 направляет вывод cat в .env2(некий аналог cp(копирования))
        2> — направляет стандартную ошибку (сообщение об ошибках) в файл
        &> — направляет в файл как стандартный вывод, так и стандартную ошибку
        >> — направляет в файл вывод команды, добавляя его в конец существующего файла.
        << - Другой тип перенаправления, называемый встроенным документом
            (here-документом), позволяет вводить текст, который используется в качестве стандартного
            ввода для команды. Встроенные документы включают в себя ввод двух
            символов «меньше» (<<) после команды, за которой следует слово. Весь текст,
            набранный после этого слова, принимается в качестве пользовательского ввода до
            тех пор, пока слово не повторится в строке само по себе
С помощью фигурных скобок ({}) можно использовать группу символов для имен
файлов, каталогов и других аргументов, которые даются командам. Например,
    группа файлов с именами от memo1 до memo5 создается так:
        touch memo{1,2,3,4,5}
    Значения в скобках не обязательно должны быть числами или даже однозначными
    цифрами. Например, можно применять диапазоны чисел или цифр, а также любую строку
    символов, разделив их запятыми(через .. можно указать диапазон {1..20} {a..z})
    Пример:
        touch {John,Bill,Sally}-{Breakfast,Lunch,Dinner}
        ls
        Bill-Breakfast Bill-Lunch John-Dinner Sally-Breakfast Sally-Lunch Bill-Dinner John-Breakfast
        John-Lunch Sally-Dinner
        echo {а..я}; echo {1..100}