"""
Введите команду ls -l, чтобы отобразить длинный список этих файлов и разделить
их на типы еще более понятным образом:
ls -l
total 4
-rw-rw-r--. 1  joe  joe   0     Dec 18 13:38   apple
lrwxrwxrwx. 1  joe  joe   5     Dec 18 13:46   pointer_to_apple -> apple
-rwxr-xr-x. 1  joe  joe   0     Dec 18  13:37  scriptx.sh
drwxrwxr-x. 2  joe  joe  4096   Dec 18 13:38   Stuff
    ^       ^   ^    ^    ^         ^           ^
    1       2   3    4    5         6           7

При просмотре длинного списка обратите внимание на то, что первый символ
каждой строки указывает на тип файла. Дефис (-) обозначает обычный файл, d —
каталог, а l (строчная L) — символическую ссылку. Исполняемый файл (скрипт
или двоичный файл, который выполняется как команда) имеет включенные флаги
исполнения (x)
Отображение длинного списка (параметр -l) с содержимым домашнего каталога
дает больше информации о размерах файлов и каталогов. В строке total показан
общий объем диска, занимаемый файлами, входящими в список (в данном примере
4 Кбайт). При добавлении параметра (-a) отображаются файлы, имена которых
начинаются с точки (.). Каталоги, например текущий (.) и родительский (..) —
каталог выше текущего, отмечаются буквой d в начале каждой записи. Все каталоги
начинаются с буквы d, а каждый файл — с дефиса (-).
Имена файлов и каталогов приведены в столбце 7. В данном примере точка (.)
указывает на каталог /home/joe, а две точки (..) — на /home — родительский
каталог /joe. Большинство файлов в этом примере — это скрытые файлы (.), которые
используются для хранения свойств графического интерфейса (каталог .kde) или
свойств оболочки (файлы .bash). Единственный файл без точек в этом списке —
это файл со словом letter. Столбец 3 отображает каталог или владельца файла.
Каталог /home принадлежит суперпользователю, а все остальное — пользователю
joe, который относится к группе sales (группы перечислены в столбце 4).
В дополнение к d или - столбец 1 содержит права доступа, установленные для
этого файла или каталога. Другая информация в списке — это несколько жестких
ссылок на элемент (столбец 2), размер каждого файла в байтах (столбец 5), а также
дата и время последнего изменения каждого файла (столбец 6)

Вот еще несколько фактов о списках файлов и каталогов.
* Количество символов, показанных в строке каталога (в примере 4096 байт),
    отражает размер файла, содержащего информацию о каталоге. Хотя это число
    может быть больше 4096 байт для каталога с большим количеством файлов, это
    число не отражает размер файлов, содержащихся в каталоге.
* Формат столбца даты и времени может меняться. Вместо May 12 дата может
    отображаться как 2019-05-12 в зависимости от дистрибутива и языковой настройки
    (переменная LANG
* Иногда вместо флага исполнения (х), установленного в исполняемом файле,
    может быть указана буква s. Если атрибут s добавлен к правам владельца
    (-rwsr-xr-x), группы (-rwsr-xr-x) или их обоих (-rwsr-xr-x), приложение
    может быть запущено любым пользователем, но право собственности на
    идущий процесс остается у пользователя/группы, а не у того, кто запустил
    команду. Это называется флагами set UID или set GID (установка ID пользователя во время выполнения).
    Например, команда mount имеет установленные права доступа -rwsr-xr-x. Это позволяет любому
    пользователю запускать mount для отображения списка смонтированных файловых систем
    (хотя в большинстве случаев необходимо быть суперпользователем, чтобы применять mount
    для фактического монтирования файловых систем из командной строки)
* Если в конце каталога указан символ t, это говорит о том, что для этого каталога
    установлен атрибут sticky bit (например, drwxrwxr-t). Установив атрибут sticky
    bit на каталоге, владелец этого каталога может разрешить другим пользователям
    и группам добавлять файлы в каталог, но запретить удалять в нем файлы друг
    друга. С помощью флага set GID, назначенного каталогу, все созданные в нем
    файлы назначаются группе каталога. (Если в каталоге вместо флага исполнения
    установлена прописная буква S или T, это означает, что были установлены
    флаг set GID или атрибут sticky bit, но по какой-то причине флаг исполнения не был подключен.)
* Если в конце строки прав доступа указан знак плюс (например, -rw-rw-r--+),
    это значит, что к файлу применены расширенные атрибуты (+), такие, как списки
    управления доступом (ACL). Точка в конце (.) указывает на примененный к файлу атрибут SELinux.

Владельцы и права доступа к файлам
    Во время работы с Linux вы, скорее всего, успели получить сообщение об ошибке
    Permission denied (Отказано в доступе). Права доступа, связанные с файлами и каталогами,
    были разработаны для защиты важных системных файлов, а также для того, чтобы пользователи
    не могли получить доступ к личным файлам других пользователей.
    Девять флагов, назначенных каждому файлу, определяют доступ к нему. Биты
    прав доступа выглядят как -rwxrwxrwx. Они используются для определения того,
    кто может читать, записывать или исполнять файл.
    У обычного файла перед девятибитным индикатором прав доступа указывается дефис. Вместо него можно
    встретить также символ d (для каталога), l (для символьной ссылки), b (для блочного устройства),
    c (для символьного устройства), s (для сокета) или p (для именованного конвейера).

    Существует девять бит (флагов) прав доступа: первые три определяют права для
    владельца, следующие три — права для основной группы пользователя, а последние
    три — для всех остальных пользователей в системе. Для файлов r обозначает право
    на чтение файла, w разрешает запись в файл, x позволяет исполнить файл. Если
    вместо буквы указан дефис, это означает, что для соответствующего бита чтения,
    записи или исполнения право доступа отключено

    Поскольку файлы и каталоги представляют собой различные типы элементов,
    чтение, запись и выполнение отдельных операций над файлами и каталогами дают
    разные результаты

    Как отмечалось ранее, чтобы увидеть права доступа к любому файлу или каталогу,
    введите команду ls -ld. Именованные файлы и каталоги отображаются так
    же, как показано в этом примере:
        ls -ld ch3 test
        -rw-rw-r-- 1 joe sales 4983 Jan 18 22:13 ch3
        drwxr-xr-x 2 joe sales 1024 Jan 24 13:47 test
    Первая строка показывает, что файлу ch3 присвоены права на чтение и запись
    для владельца и группы.
    Все остальные пользователи имеют право на чтение,
    то есть им разрешается просматривать файл, но они не могут изменить его содержимое
    или удалить его. Во второй строке показан каталог test (обозначается буквой d перед битами прав
    доступа). Владелец имеет право на чтение, запись и выполнение,
    в то время как группа и другие пользователи — только на чтение и выполнение.
    То есть владелец может добавлять, изменять или удалять файлы в этом каталоге,
    а все остальные — только читать содержимое, переходить в этот каталог и
    перечислять его содержимое. (Если бы не было параметров -d для ls, были бы указаны
    файлы в тестовом каталоге вместо прав доступа к этому каталогу.)

Изменение прав доступа командой chmod с помощью чисел.
    Чтобы изменить права доступа к файлу, можно воспользоваться командой chmod.
    В таком случае каждому праву доступа (чтение, запись и выполнение) присваивается
    номер — r=4, w=2 и x=1 соответственно, то есть для задания прав доступа используются
    наборы чисел. Например, чтобы установить полные права доступа для
    себя как владельца, необходимо определить первое число — 7 (4 + 2 + 1), а затем
    дать группе и другим пользователям право только на чтение, указав второе и третье
    числа — 4 (4 + 0 + 0), чтобы в итоге получилось число 744. Любая комбинация прав
    доступа включает числа от 0 (нет прав доступа) до 7 (полные права доступа).
    Вот примеры того, как изменить права доступа к файлу (с именем file) и как
    это будет выглядеть.
    Установим с помощью команды chmod права доступа rwxrwxrwx:
        chmod 777 file
    Установим с помощью команды chmod права доступа rwxr-xr-x:
        chmod 755 file
    Установим с помощью команды chmod права доступа rw-r--r--:
        chmod 644 file
    Установим с помощью команды chmod права доступа ---------:
        chmod 000 file

    Команда chmod может использоваться и рекурсивно. Например, предположим,
    что вы хотите предоставить права доступа 755 (rwxr-xr-x ) на всю структуру
    каталогов, начиная с каталога $HOME/myapp. Для этого задействуйте параметр -R
    следующим образом:
        chmod -R 755 $HOME/myapps
    Все файлы и каталоги, расположенные ниже, включая каталог myapp в домашнем каталоге,
    будут иметь установленные права доступа 755. Поскольку числовой
    подход к настройке прав доступа изменяет все биты прав доступа одновременно,
    чаще всего для повторного изменения битов в большом наборе файлов используются буквы.

Изменение прав доступа командой chmod с помощью букв.
    Можно определять права доступа к файлам, применяя знаки плюс (+) и минус (-),
    а также буквы, указывающие на изменения. С помощью букв для каждого файла
    можно изменить права доступа для пользователя (u), группы (g), других (o)
    и всех пользователей (a). Биты прав доступа включают в себя право на чтение (r),
    запись (w) и выполнение (x). Начните с файла, у которого все права доступа
    открыты (rwxrwxrwx). Выполните следующие команды chmod, используя параметры
    со знаком минус.
    Установим с помощью команды chmod права доступа r-xr-xr-x:
        chmod a-w file
    Установим с помощью команды chmod права доступа rwxrwxrw-:
        chmod o-x file
    Установим с помощью команды chmod права доступа rwx------:
        chmod go-rwx file
    Установим с помощью команды chmod права доступа rw-------:
        chmod u+rw files
    Установим с помощью команды chmod права доступа --x----x:
        chmod a+x files
    Установим с помощью команды chmod права доступа r-xr-x---:
        chmod ug+rx files
    Установить права рекурсивно:
        chmod -R o-w $HOME/myapps

Настройка прав доступа к файлу по умолчанию с помощью umask
    Когда вы создаете файл как обычный пользователь, ему по умолчанию назначаются
    права доступа rw-rw-r--. Каталогу назначаются права доступа rwxrwxr-x.
    Для суперпользователя права доступа к файлам и каталогам выглядят так:
    rw-r--r-- и rwxr-xr-x соответственно. Такие значения по умолчанию определяются
    значением команды umask. Введите команду umask, чтобы увидеть ее значение
    Чтобы временно изменить значение umask, выполните команду umask. Затем
    попробуйте создать несколько файлов и каталогов, чтобы увидеть, как значение
    umask влияет на установку прав доступа, например:
        umask 777 ; touch file01 ; mkdir dir01 ; ls -ld file01 dir01
        d---------. 2 joe joe 6 Dec 19 11:03 dir01
        ----------. 1 joe joe 0 Dec 19 11:02 file0
    Если нужно навсегда изменить значение umask, добавьте команду umask в файл
    .bashrc в домашнем каталоге (ближе к концу этого файла). В следующий раз,
    когда вы запустите оболочку, umask будет установлена на любое выбранное вами
    значение.

Смена владельца файла
    Как обычный пользователь, вы не можете изменять владельца файлов или каталогов.
    Однако, будучи суперпользователем, можете это сделать. Предположим, что
    вы создали файл memo.tx в домашнем каталоге пользователя joe как суперпользователь.
    Вот как можно сделать joe владельцем этого файла:
        chown joe /home/joe/memo.txt
        ls -l /home/joe/memo.txt
        -rw-r--r--. 1 joe root 0 Dec 19 11:23 /home/joe/memo.txt
    Обратите внимание на то, что команда chown изменила пользователя на joe, но
    оставила группу суперпользователя. Чтобы изменить и пользователя, и группу
    на joe, нужно ввести следующее:
        chown joe:joe /home/joe/memo.txt
        ls -l /home/joe/memo.txt
        -rw-r--r--. 1 joe joe 0 Dec 19 11:23 /home/joe/memo.txt

    Команду chown также можно использовать рекурсивно. Рекурсивный параметр
    (-R) применяется, если нужно изменить всю структуру каталогов, сделав их
    собственностью конкретного пользователя. Например, чтобы передать полное
    владение содержимым USB-накопителя, который смонтирован в каталоге /media/myusb,
    пользователю joe, введите следующее:
        chown -R joe:joe /media/myusb
"""
