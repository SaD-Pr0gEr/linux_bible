"""
При запуске системы Linux и открытии оболочки пользователь входит
в свой домашний каталог. Большинство файлов, которые вы сохраняете и с
которыми работаете, вероятно, будут находиться в этом каталоге или в подкаталогах,
созданных вручную.

Команды файловой системы
    Название               Действие
    ______________________________________
    cd                     Меняет каталог
    pwd                    Выводит путь до текущего каталога
    mkdir                  Создаёт папку
    chmod                  Меняет права доступа к файлу/папке
    ls                     Выводит содержимое каталога(текущий либо определённый)
    touch                  Создаёт файл

    Новый пользователь системы Fedora или Red Hat Enterprise Linux по умолчанию назначается
    в группу с тем же именем. В предыдущем примере пользователь joe назначен в группу joe.
    Данный подход к управлению группами называется личной группой пользователя
    (user private group, UPG).

Метасимволы и операторы
    Независимо от того, перечисляете вы, перемещаете, копируете, удаляете или иным
    образом воздействуете на файлы в системе Linux, определенные специальные символы,
    называемые метасимволами и операторами, помогают работать с файлами более эффективно.
    Операторы позволяют направлять информацию из одной команды в другую или из одного файла в другой

Метасимволы для пакетной обработки файлов.
    Чтобы экономить время и быстрее ссылаться на группу файлов, оболочка bash
    позволяет применять метасимволы. Всякий раз, когда нужно обратиться к файлу
    или каталогу, например, чтобы перечислить, открыть или удалить его, используйте
    соответствующие файлам метасимволы.
    Примеры метасисволов:
        1) * — соответствует любому количеству символов
        2) ? — соответствует любому одному символу
        3) [...] — соответствует любому из символов между скобками, которые могут
            включать диапазон букв или цифр, разделенных дефисом

Метасимволы перенаправления файлов
    Команды получают данные после стандартного ввода и передают их на стандартный вывод.
    С помощью конвейеров (описаны ранее) можно направлять стандартный вывод одной команды
    на стандартный ввод другой. Для направления данных в файлы и из файлов используются
    знаки «меньше» (<) и «больше» (>).
    Символы перенаправления файлов:
        < — направляет содержимое файла в команду. В большинстве случаев по умолчанию
            команда ожидает этого действия, и здесь символ необязателен, то есть
            less bigfile — то же самое, что less < bigfile;
        > — направляет стандартный вывод команды в файл. Если файл существует, то
            его содержимое перезаписывается
            Например:
                .env
                A=b
                B=c
                cat .env > .env2 направляет вывод cat в .env2(некий аналог cp(копирования))
        2> — направляет стандартную ошибку (сообщение об ошибках) в файл
        &> — направляет в файл как стандартный вывод, так и стандартную ошибку
        >> — направляет в файл вывод команды, добавляя его в конец существующего файла.
        << - Другой тип перенаправления, называемый встроенным документом
            (here-документом), позволяет вводить текст, который используется в качестве стандартного
            ввода для команды. Встроенные документы включают в себя ввод двух
            символов «меньше» (<<) после команды, за которой следует слово. Весь текст,
            набранный после этого слова, принимается в качестве пользовательского ввода до
            тех пор, пока слово не повторится в строке само по себе
Применение фигурных скобок
    С помощью фигурных скобок ({}) можно использовать группу символов для имен
    файлов, каталогов и других аргументов, которые даются командам. Например,
    группа файлов с именами от memo1 до memo5 создается так:
        touch memo{1,2,3,4,5}
    Значения в скобках не обязательно должны быть числами или даже однозначными
    цифрами. Например, можно применять диапазоны чисел или цифр, а также любую строку
    символов, разделив их запятыми(через .. можно указать диапазон {1..20} {a..z})
    Пример:
        touch {John,Bill,Sally}-{Breakfast,Lunch,Dinner}
        ls
        Bill-Breakfast Bill-Lunch John-Dinner Sally-Breakfast Sally-Lunch Bill-Dinner John-Breakfast
        John-Lunch Sally-Dinner
        echo {а..я}; echo {1..100}
"""
